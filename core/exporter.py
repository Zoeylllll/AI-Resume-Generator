# core/exporter.py

from fpdf import FPDF
from docx import Document
import uuid

class ResumePDF(FPDF):
    def __init__(self, template):
        super().__init__()
        self.template = template

    def header(self):
        if self.template == "business":
            self.set_font("Arial", "B", 14)
            self.set_text_color(0, 0, 80)
            self.cell(0, 10, "Business Resume", ln=True, align="C")
        elif self.template == "academic":
            self.set_font("Helvetica", "B", 12)
            self.set_text_color(80, 80, 80)
            self.cell(0, 10, "Academic Resume", ln=True, align="C")
        else:  # tech or default
            self.set_font("Courier", "B", 12)
            self.set_text_color(0, 0, 0)
            self.cell(0, 10, "Tech Resume", ln=True, align="L")

    def footer(self):
        if self.template == "business":
            self.set_y(-15)
            self.set_font("Arial", "I", 9)
            self.set_text_color(100, 100, 100)
            self.cell(0, 10, "Generated by AI Resume Generator", 0, 0, "C")

def export_to_pdf(text: str, template: str = "tech") -> str:
    pdf = ResumePDF(template)
    pdf.add_page()
    pdf.set_auto_page_break(auto=True, margin=15)

    # 字体样式设置
    if template == "tech":
        pdf.set_font("Courier", "", 11)
        pdf.set_text_color(0, 0, 0)
    elif template == "business":
        pdf.set_font("Times", "", 12)
        pdf.set_text_color(40, 40, 80)
    elif template == "academic":
        pdf.set_font("Helvetica", "", 11)
        pdf.set_text_color(60, 60, 60)

    for line in text.split("\n"):
        pdf.multi_cell(0, 10, line)

    filename = f"resume_{template}_{uuid.uuid4().hex[:6]}.pdf"
    pdf.output(filename)
    return filename

def export_to_docx(text: str) -> str:
    doc = Document()
    doc.add_heading("AI Enhanced Resume", level=1)
    for line in text.split("\n"):
        doc.add_paragraph(line)
    filename = f"resume_{uuid.uuid4().hex[:6]}.docx"
    doc.save(filename)
    return filename

